{"version":3,"sources":["components/Chart/Chart.module.css","components/ProductCard/ProductCard.js","components/Switcher/SelectedItem/SelectedItem.js","components/Switcher/Switcher.js","components/Chart/Chart.js","components/Currencies/Currencies.js","App.js","serviceWorker.js","index.js","components/ProductCard/ProductCard.module.css","components/Switcher/Switcher.module.css","assets/products_images sync /^/.*$","assets/products_images/example_drive.jpg","assets/products_images/example_memory.jpg","assets/products_images/example_motherboard.jpg","assets/products_images/example_processor.jpg"],"names":["module","exports","chart","product","props","margin","Math","round","salePrice","purchasePrice","currencyPurchase","currency","converter","currencySale","react_default","a","createElement","className","classes","Card","title","src","require","image","alt","description","Prices","name","item","value","switcher","switchList","list","map","SelectedItem","key","serialNum","products","onChange","changed","selectValue","chartHeight","window","innerWidth","chartData","labels","datasets","label","data","backgroundColor","borderWidth","borderColor","hoverBorderWidth","hoverBorderColor","chartOptions","display","text","chartTitle","fontSize","legend","position","fontColor","layout","padding","left","right","bottom","top","tooltips","enabled","chartType","type","es","options","height","currencies","checked","active","App","state","photo","qtyBought","qtySold","purchase","sale","activeProduct","selectedCurrency","changeProductHandler","event","newProduct","_this","filter","target","setState","currencyChangeHandler","newCurrencies","JSON","parse","stringify","activeCurrency","symbol","Currencies","this","Switcher","ProductCard","Chart","Component","Boolean","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","./example_drive.jpg","./example_memory.jpg","./example_motherboard.jpg","./example_processor.jpg","webpackContext","req","id","webpackContextResolve","__webpack_require__","e","Error","code","keys","Object","resolve","p"],"mappings":"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","file":"static/js/main.08af1ac4.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"chart\":\"Chart_chart__4wFk0\"};","import React from 'react';\r\nimport classes from './ProductCard.module.css';\r\n\r\n\r\nconst product = (props) => {\r\n\r\n    let margin = Math.round((((props.salePrice - props.purchasePrice)/props.salePrice)*100) * 100) / 100;\r\n    let currencyPurchase = Math.round(props.purchasePrice * props.currency.converter *100)/100;\r\n    let currencySale = Math.round(props.salePrice * props.currency.converter *100)/100;;\r\n\r\n    return (\r\n        <div className={classes.Card}>\r\n            <h3>{props.title}</h3>\r\n            <img src={require('../../assets/products_images/'+ props.image)} alt='xxx' />\r\n            <p>{props.description}</p>\r\n            <div className={classes.Prices}>\r\n                <p>Purchase price: {currencyPurchase} {props.currency.name}</p>\r\n                <p>Margin: {margin}%</p>\r\n                <p>Sale price: {currencySale} {props.currency.name}</p>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default product;","import React from 'react';\r\n\r\nconst item = (props) => {\r\n    return (\r\n        <option value = {props.name}>{props.name}</option>\r\n    )\r\n}\r\n\r\nexport default item;","import React from 'react';\r\nimport  classes from'./Switcher.module.css';\r\nimport SelectedItem from './SelectedItem/SelectedItem'\r\n\r\nconst switcher = (props) => {\r\n\r\n    let switchList = props.list.map(product =>{\r\n        return <SelectedItem \r\n            name={product.name}\r\n            key={product.serialNum}\r\n             />\r\n    });\r\n\r\n    return (\r\n        <div className={classes.products}>\r\n            <select onChange={props.changed} value={props.selectValue}>\r\n              {switchList}\r\n            </select>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default switcher;","import React from 'react';\r\nimport {Bar, Doughnut, Line, Pie, HorizontalBar} from 'react-chartjs-2';\r\nimport classes from './Chart.module.css'\r\n\r\n\r\nconst chart = (props) => {\r\n\r\n    let chartHeight = 150;\r\n\r\n    if (window.innerWidth <=600){\r\n        chartHeight = 250;\r\n    }\r\n\r\n\r\n    const chartData = {\r\n        labels:['Jan.','Feb.','Mar.','Apr.','May','Jun.','Jul.','Aug.','Sep.','Oct.','Nov.','Dec.'],\r\n        datasets:[{\r\n            label:'Quantity',\r\n            data:props.data,\r\n            backgroundColor:[\r\n                'rgba(255, 99, 132, 0.6)',\r\n                'rgba(54, 162, 235, 0.6)',\r\n                'rgba(255, 206, 86, 0.6)',\r\n                'rgba(75, 192, 192, 0.6)',\r\n                'rgba(153, 102, 255, 0.6)',\r\n                'rgba(200, 30, 44, 0.6)',\r\n                'rgba(190, 77, 25, 0.6)',\r\n                'rgba(213, 103, 103, 0.6)',\r\n                'rgba(22, 192, 113, 0.6)',\r\n                'rgba(180, 229, 21, 0.6)',\r\n                'rgba(36, 27, 192, 0.6)',\r\n                'rgba(244, 62, 129, 0.6)'],\r\n                \r\n            borderWidth: 1,\r\n            borderColor: '#777',\r\n            hoverBorderWidth: 3,\r\n            hoverBorderColor: '#000'\r\n\r\n        }]\r\n    }\r\n    const chartOptions = {\r\n        title: {\r\n            display:true,\r\n            text:props.chartTitle,\r\n            fontSize:25\r\n        },\r\n        legend:{\r\n            display:false,\r\n            position:'right',\r\n            labels:{\r\n                fontColor:'black'\r\n            }\r\n        },\r\n        layout:{\r\n            padding:{\r\n                left:0,\r\n                right:0,\r\n                bottom:50,\r\n                top:0,\r\n\r\n            }\r\n        },\r\n        tooltips:{\r\n            enabled:true\r\n        }\r\n    }\r\n\r\n    let chartType = null;\r\n\r\n    switch (props.type) {\r\n        case ('bar'):\r\n            chartType = <div className={classes.chart}>\r\n                           <Bar\r\n                            data={chartData}\r\n                            options={chartOptions}\r\n                                                    /> \r\n                        </div>;\r\n            break;\r\n        case ('horizontal'):\r\n                        chartType = <div className={classes.chart}>\r\n                           <HorizontalBar\r\n                            data={chartData}\r\n                            options={chartOptions}\r\n                            height={chartHeight}\r\n                                                    /> \r\n                        </div>;\r\n            break;\r\n        case ('line'):\r\n            chartData.datasets[0].backgroundColor = 'transparent';\r\n            chartData.datasets[0].borderColor = 'orange';\r\n            chartData.datasets[0].borderWidth = 2;\r\n            \r\n            chartType = <div className={classes.chart}>\r\n                           <Line\r\n                            data={chartData}\r\n                            options={chartOptions}\r\n                            height={chartHeight}\r\n                                                    /> \r\n                        </div>; \r\n            break;\r\n        case ('pie'):\r\n            chartType = <div className={classes.chart}>\r\n                           <Pie\r\n                            data={chartData}\r\n                            options={chartOptions}\r\n                                                    /> \r\n                        </div>; \r\n            break;           \r\n        case ('doughnut'):\r\n            chartType = <div className={classes.chart}>\r\n                           <Doughnut\r\n                            data={chartData}\r\n                            options={chartOptions}\r\n                                                    /> \r\n                        </div>; \r\n            break;  \r\n        default:\r\n            chartType = null;\r\n    }\r\n\r\n    \r\n    return (\r\n    chartType\r\n    )\r\n    \r\n}\r\n\r\n\r\nexport default chart;","import React from 'react';\r\n\r\n\r\nconst currencies = (props) => {\r\n\r\n\r\n    return(\r\n        <form>\r\n\r\n            <div className=\"radio\">\r\n                <label>\r\n                 <input type='radio' value=\"USD\" onChange={props.changed} checked={props.currencies[0].active}></input>USD\r\n                </label>\r\n            </div>\r\n            \r\n            <div className=\"radio\">\r\n                <label>\r\n                <input type='radio' value=\"EUR\" onChange={props.changed} checked={props.currencies[1].active} ></input>EUR\r\n                </label>\r\n            </div>\r\n\r\n            <div className=\"radio\">\r\n                <label>\r\n                    <input type='radio'value=\"PLN\" onChange={props.changed} checked={props.currencies[2].active} ></input>PLN\r\n                </label>\r\n            </div>   \r\n\r\n        </form>\r\n     \r\n        \r\n\r\n        \r\n\r\n    )\r\n}\r\n\r\nexport default currencies;","import React, { Component } from 'react';\r\nimport './App.css';\r\nimport  ProductCard from './components/ProductCard/ProductCard';\r\nimport Switcher from './components/Switcher/Switcher';\r\nimport Chart from './components/Chart/Chart';\r\nimport Currencies from './components/Currencies/Currencies';\r\n\r\nclass App extends Component {\r\n\r\n  state = {\r\n    products: [\r\n      { name: 'Example Disc',\r\n        serialNum: 'HDD1234EXAMPLESERIAL',\r\n        photo: 'example_drive.jpg',\r\n        description: 'Hard disk drive (HDD) is an electromechanical data storage device that uses magnetic storage to store and retrieve digital information using one or more rigid rapidly rotating disks (platters) coated with magnetic material. The platters are paired with magnetic heads, usually arranged on a moving actuator arm, which read and write data to the platter surfaces.',\r\n        qtyBought: [45,60,33,47,55,41,32,74,50,66,104,84],\r\n        qtySold: [40,57,40,30,24,14,50,43,38,60,143,152],\r\n        purchase: 44,\r\n        sale: 48 },\r\n\r\n      { name: 'Example Processor',\r\n        serialNum: 'CPU14345EXAMPLESERIAL',\r\n        photo: 'example_processor.jpg',\r\n        description: 'A central processing unit (CPU) is the electronic circuitry within a computer that carries out the instructions of a computer program by performing the basic arithmetic, logic, controlling and input/output (I/O) operations specified by the instructions. The computer industry has used the term \"central processing unit\" at least since the early 1960s.',\r\n        qtyBought: [120,145,177,94,87,89,115,93,134,163,212,172],\r\n        qtySold: [93,115,160,101,79,85,111,90,90,207,193,277],\r\n        purchase: 120,\r\n        sale: 134},\r\n        \r\n        { name: 'Example Memory',\r\n        serialNum: 'Mem460432EXAMPLESERIAL',\r\n        photo: 'example_memory.jpg',\r\n        description: 'RAM is a form of computer data storage that stores data and machine code currently being used. A random-access memory device allows data items to be read or written in almost the same amount of time irrespective of the physical location of data inside the memory.',\r\n        qtyBought: [24,16,17,10,33,16,22,9,13,27,50,35],\r\n        qtySold: [14,18,7,16,22,19,25,13,15,21,40,62],\r\n        purchase: 62,\r\n        sale: 65},\r\n\r\n        { name: 'Example Motherboard',\r\n        serialNum: 'MB123054EXAMPLESERIAL',\r\n        photo: 'example_motherboard.jpg',\r\n        description: 'A Motherboard is the main printed circuit board (PCB) found in general purpose microcomputers and other expandable systems. It holds and allows communication between many of the crucial electronic components of a system, such as the central processing unit (CPU) and memory, and provides connectors for other peripherals.',\r\n        qtyBought: [340,410,380,270,296,313,444,490,390,414,510,460],\r\n        qtySold: [320,382,400,310,284,320,352,410,433,365,551,590],\r\n        purchase: 150,\r\n        sale: 157}\r\n    ],\r\n\r\n    activeProduct: \r\n    { name: 'Example Disc',\r\n      serialNum: 'HDD1234EXAMPLESERIAL',\r\n      photo: 'example_drive.jpg',\r\n      description: 'Hard disk drive (HDD) is an electromechanical data storage device that uses magnetic storage to store and retrieve digital information using one or more rigid rapidly rotating disks (platters) coated with magnetic material. The platters are paired with magnetic heads, usually arranged on a moving actuator arm, which read and write data to the platter surfaces.',\r\n      qtyBought: [45,60,33,47,55,41,32,74,50,66,104,84],\r\n      qtySold: [40,57,40,30,24,14,50,43,38,60,143,152],\r\n      purchase: 44,\r\n      sale: 48 },\r\n\r\n      currencies:[\r\n        {\r\n          name:'USD',\r\n          converter: 1,\r\n          active: true\r\n        },\r\n        {\r\n          name:'EUR',\r\n          converter: 0.88,\r\n          active: false\r\n        },\r\n        {\r\n          name:'PLN',\r\n          converter: 3.7,\r\n          active: false\r\n        }\r\n\r\n      ],\r\n      selectedCurrency:{\r\n        name:'USD',\r\n        converter: 1\r\n      }\r\n  }\r\n\r\n  changeProductHandler = (event) => {\r\n\r\n    let newProduct = this.state.products.filter((product)=>{\r\n      return product.name === event.target.value;\r\n    });\r\n    this.setState({activeProduct: newProduct[0]});\r\n  }\r\n\r\n  currencyChangeHandler = (event) => {\r\n  \r\n   let newCurrencies = JSON.parse(JSON.stringify(this.state.currencies));\r\n   let activeCurrency = this.state.currencies.filter((symbol)=>{ return symbol.name === event.target.value; });\r\n\r\n    newCurrencies.map((currency)=>{\r\n      return currency.name === activeCurrency[0].name ? currency.active = true : currency.active = false  \r\n   });\r\n   delete activeCurrency[0].active;\r\n   this.setState({currencies:newCurrencies,selectedCurrency:activeCurrency[0]});\r\n\r\n\r\n  }\r\n\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"App\">\r\n        <h1>Product Analysis App</h1>\r\n        <Currencies\r\n        currencies={this.state.currencies}\r\n        changed={this.currencyChangeHandler}/>\r\n\r\n        <div className=\"topOfLayout\">\r\n            <Switcher\r\n              list={this.state.products}\r\n              selectValue={this.state.activeProduct.name}\r\n              changed={this.changeProductHandler}\r\n            />\r\n\r\n            <ProductCard\r\n              title={this.state.activeProduct.name}\r\n              image={this.state.activeProduct.photo}\r\n              description={this.state.activeProduct.description}\r\n              salePrice={this.state.activeProduct.sale}\r\n              purchasePrice={this.state.activeProduct.purchase}\r\n              currency = {this.state.selectedCurrency}\r\n            />\r\n        </div>\r\n\r\n        <div className=\"charts\">\r\n          <Chart\r\n            data={this.state.activeProduct.qtyBought}\r\n            chartTitle={'Annual purchase chart'}\r\n            type={'horizontal'}/>\r\n          <Chart\r\n            data={this.state.activeProduct.qtySold}\r\n            chartTitle={'Annual sales chart'}\r\n            type='line'/>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Card\":\"ProductCard_Card__NTMKF\",\"Prices\":\"ProductCard_Prices__3YfIK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"products\":\"Switcher_products__1irMx\"};","var map = {\n\t\"./example_drive.jpg\": 79,\n\t\"./example_memory.jpg\": 80,\n\t\"./example_motherboard.jpg\": 81,\n\t\"./example_processor.jpg\": 82\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tvar id = map[req];\n\tif(!(id + 1)) { // check for number or string\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn id;\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 78;","module.exports = __webpack_public_path__ + \"static/media/example_drive.dadc2728.jpg\";","module.exports = __webpack_public_path__ + \"static/media/example_memory.ce50dfbc.jpg\";","module.exports = __webpack_public_path__ + \"static/media/example_motherboard.3f93c058.jpg\";","module.exports = __webpack_public_path__ + \"static/media/example_processor.68228a61.jpg\";"],"sourceRoot":""}